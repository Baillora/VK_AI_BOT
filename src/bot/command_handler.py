import config
from src.bot.vk_client import send_message

def handle_command(text, user_id, state):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã True, –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –±—ã–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –∏–Ω–∞—á–µ False.
    """
    if not text.startswith('/'):
        return False

    # –ö–æ–º–∞–Ω–¥—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –≤ —Ä–µ–∂–∏–º–µ "raw" (–±–µ–∑ –ø–∞—Ä—Å–∏–Ω–≥–∞ LaTeX)
    text = text.lower()
    
    if text == "/help":
        send_message(user_id,
            "ü§ñ –ö–æ–º–∞–Ω–¥—ã:\n\n"
            "/model qwen|kimi|deepseek - –í—ã–±–æ—Ä –ò–ò\n"
            "/new - –°–±—Ä–æ—Å–∏—Ç—å/–Ω–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –¥–∏–∞–ª–æ–≥\n\n"
            "–†–µ–∂–∏–º—ã (–≤–ª–∏—è—é—Ç –Ω–∞ –ò–ò):\n"
            "/raw - '–°—ã—Ä–æ–π' —Ç–µ–∫—Å—Ç\n"
            "/math - –î–ª—è –∑–∞–¥–∞—á, —Ñ–æ—Ä–º—É–ª (LaTeX, **PDF/Image**)\n"
            "/code - –î–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è, –∫–æ–¥–∞\n\n"
            "–§–æ—Ä–º–∞—Ç (—Ç–æ–ª—å–∫–æ –¥–ª—è /math):\n"
            "/format text|image|pdf\n"
            "/text - –¢–µ–∫—Å—Ç (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –∫–æ–¥–∞/raw)\n"
            "/image - –ö–∞—Ä—Ç–∏–Ω–∫–æ–π (—Å —Ñ–æ—Ä–º—É–ª–∞–º–∏)\n"
            "/pdf - –î–æ–∫—É–º–µ–Ω—Ç–æ–º (—Å —Ñ–æ—Ä–º—É–ª–∞–º–∏, **–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è math**)\n\n"
            "üì∏ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ (–∏ —Ç–µ–∫—Å—Ç) –¥–ª—è Qwen"
        , mode="raw")
        return True
    
    if text == "/new":
        state.clear_user_chat(user_id)
        send_message(user_id, "‚úÖ –ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–∏–∞–ª–æ–≥–∞ —Å–±—Ä–æ—à–µ–Ω.", mode="raw")
        return True

    if text.startswith("/model"):
        parts = text.split(maxsplit=1)
        if len(parts) < 2:
            send_message(user_id, "–£–∫–∞–∂–∏—Ç–µ: /model qwen|kimi|deepseek", mode="raw")
            return True
        
        model = parts[1].lower()
        if model in config.MODELS:
            state.set_user_model(user_id, model)
            send_message(user_id, f"‚úÖ –ú–æ–¥–µ–ª—å: {model}", mode="raw")
        else:
            send_message(user_id, "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –º–æ–¥–µ–ª—å", mode="raw")
        return True
    
    # --- –ö–û–ú–ê–ù–î–´ –§–û–†–ú–ê–¢–ê (/format, /pdf, /image, /text) ---
    
    if text.startswith("/format"):
        parts = text.split(maxsplit=1)
        if len(parts) < 2:
            send_message(user_id, "–£–∫–∞–∂–∏—Ç–µ: /format text|image|pdf", mode="raw")
            return True
        
        fmt = parts[1].lower()
        if state.set_format(user_id, fmt):
            send_message(user_id, f"‚úÖ –§–æ—Ä–º–∞—Ç: {fmt}", mode="raw")
        else:
            send_message(user_id, "‚ùå –î–æ—Å—Ç—É–ø–Ω—ã: text, image, pdf", mode="raw")
        return True
    
    elif text == "/pdf":
        # –ö–æ–º–∞–Ω–¥—ã /pdf /image /text –≤–ª–∏—è—é—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ —Ñ–æ—Ä–º–∞—Ç
        state.set_format(user_id, "pdf")
        send_message(user_id, "‚úÖ –§–æ—Ä–º–∞—Ç –≤—ã–≤–æ–¥–∞: PDF", mode="raw")
        return True

    elif text == "/image":
        state.set_format(user_id, "image")
        send_message(user_id, "‚úÖ –§–æ—Ä–º–∞—Ç –≤—ã–≤–æ–¥–∞: –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", mode="raw")
        return True
        
    elif text == "/text":
        state.set_format(user_id, "text")
        send_message(user_id, "‚úÖ –§–æ—Ä–º–∞—Ç –≤—ã–≤–æ–¥–∞: –¢–µ–∫—Å—Ç", mode="raw")
        return True
    
    # --- –ö–û–ú–ê–ù–î–´ –†–ï–ñ–ò–ú–ê (/math, /code, /raw) ---
    
    elif text == "/math":
        state.set_mode(user_id, "math")
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–æ—Ä–º–∞—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é PDF
        state.set_format(user_id, "pdf")
        send_message(user_id, "‚úÖ –†–µ–∂–∏–º: –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (LaTeX). –§–æ—Ä–º–∞—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: PDF.", mode="raw")
        return True

    elif text == "/code":
        state.set_mode(user_id, "code")
        state.set_format(user_id, "text") # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –∫–æ–¥–∞ –≤ —Ç–µ–∫—Å—Ç
        send_message(user_id, "‚úÖ –†–µ–∂–∏–º: –ö–æ–¥ (–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ``` ... ```)", mode="raw")
        return True
        
    elif text == "/raw":
        state.set_mode(user_id, "raw")
        state.set_format(user_id, "text") # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º–∞—Ç –¥–ª—è raw –≤ —Ç–µ–∫—Å—Ç
        send_message(user_id, "‚úÖ –†–µ–∂–∏–º: Raw (–ë–µ–∑ –æ–±—Ä–∞–±–æ—Ç–∫–∏)", mode="raw")
        return True
    
    send_message(user_id, "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –í–≤–µ–¥–∏—Ç–µ /help –¥–ª—è —Å–ø–∏—Å–∫–∞.", mode="raw")
    return True