import traceback
from vk_api.bot_longpoll import VkBotEventType

import config
from state_manager import StateManager
from src.bot import vk_client, command_handler, message_handler

def main():
    # 1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    longpoll = vk_client.get_longpoll_listener()
    state = StateManager()
    
    print(f"‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ì—Ä—É–ø–ø–∞ ID: {config.GROUP_ID}")
    if config.TRUSTED_IDS:
        print(f"üîí –î–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ ID: {sorted(config.TRUSTED_IDS)}")
    else:
        print("‚ö†Ô∏è –ë–æ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤—Å–µ–º (TRUSTED_IDS –Ω–µ –∑–∞–¥–∞–Ω)")
    
    print("üëÇ –°–ª—É—à–∞—é...")

    # 2. –ì–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª
    for event in longpoll.listen():
        if event.type != VkBotEventType.MESSAGE_NEW:
            continue
            
        msg = event.obj.message
        user_id = msg["from_id"]
        text = msg.get("text", "").strip()
        attachments = msg.get("attachments", [])

        # 3. –§–∏–ª—å—Ç—Ä—ã
        if config.TRUSTED_IDS and user_id not in config.TRUSTED_IDS:
            print(f"[{user_id}] ID –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ –¥–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö, –∏–≥–Ω–æ—Ä–∏—Ä—É—é.")
            continue
            
        if not text and not attachments:
            print(f"[{user_id}] ...–ø—É—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å, –∏–≥–Ω–æ—Ä–∏—Ä—É—é.")
            continue
            
        print(f"üì© [{user_id}] {text[:60]}...")
        
        try:
            # 4. –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
            # (handle_command —Å–∞–º –æ—Ç–ø—Ä–∞–≤–∏—Ç –æ—Ç–≤–µ—Ç, –µ—Å–ª–∏ —ç—Ç–æ –∫–æ–º–∞–Ω–¥–∞)
            if command_handler.handle_command(text, user_id, state):
                continue
            
            # 5. –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π AI
            message_handler.handle_message(msg, user_id, state)

        except Exception as e:
            print(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –í –¶–ò–ö–õ–ï: {e}")
            traceback.print_exc()
            try:
                vk_client.send_message(
                    user_id, 
                    "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞. "
                    "–Ø —Å–æ–æ–±—â–∏–ª –æ –Ω–µ–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.", 
                    mode="raw"
                )
            except:
                pass

if __name__ == "__main__":
    main()